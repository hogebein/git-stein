plugins {
    id 'java-library'
    id 'application'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.github.ben-manes.versions' version '0.43.0'
//    id 'org.ajoberstar.grgit' version '5.0.0'
}

group = 'com.github.sh5i'
// version = grgit.describe(tags: true) + (grgit.status().isClean() ? "" : "+dirty")

sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    api 'org.eclipse.jgit:org.eclipse.jgit:6.3.0.202209071007-r'
    implementation 'org.slf4j:slf4j-api:2.0.6'
    implementation 'ch.qos.logback:logback-classic:1.4.5'
    implementation 'org.jgrapht:jgrapht-core:1.5.1'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'info.picocli:picocli:4.7.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.xerial:sqlite-jdbc:3.39.3.0'
    implementation 'com.j256.ormlite:ormlite-jdbc:5.7'

    testImplementation 'junit:junit:4.13.2'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
    
    // dependencies for bundle apps: available only if the property "stein.runsample" is defined
    if (project.findProperty("stein.runsample") == "yes") {
        implementation 'org.eclipse.jdt:org.eclipse.jdt.core:3.31.0'
        implementation 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
        implementation 'org.jgrapht:jgrapht-io:1.5.1'
    } else {
        compileOnly 'org.eclipse.jdt:org.eclipse.jdt.core:3.31.0'
        compileOnly 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
        compileOnly 'org.jgrapht:jgrapht-io:1.5.1'
    }
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes "Main-Class": "jp.ac.titech.c.se.stein.Loader"
    }
}

application {
    mainClassName = "jp.ac.titech.c.se.stein.Loader"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

shadowJar {
    minimize {
        exclude(dependency('org.xerial:sqlite-jdbc:.*'))
        exclude(dependency('ch.qos.logback:logback-classic:.*'))
    }
}
